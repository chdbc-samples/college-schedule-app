# Workflow для публікації пакетів Maven в GitHub Packages
# GITHUB_ACTOR та GITHUB_TOKEN автоматично надаються GitHub Actions:
# - GITHUB_ACTOR: ім'я користувача, який запустив workflow
# - GITHUB_TOKEN: автоматично генерується для кожного запуску workflow
#   і має необхідні права для публікації пакетів
name: Maven Package

# Запускається при пушах в гілку main або при створенні pull request
on:
  push:
    branches: [ "main" ]

  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ubuntu-latest
    # Надання необхідних дозволів для публікації пакетів
    permissions:
      contents: read
      packages: write

    steps:
    # Крок 1: Отримання коду з репозиторію
    - uses: actions/checkout@v3

    # Крок 2: Налаштування JDK 17 з кешуванням залежностей Maven
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        # Налаштування GitHub Packages як цільового репозиторію
        # GITHUB_ACTOR та GITHUB_TOKEN використовуються для автентифікації
        # при публікації пакетів в GitHub Packages
        server-id: github
        server-username: GITHUB_ACTOR      # Автоматично містить ім'я користувача, який запустив workflow
        server-password: GITHUB_TOKEN      # Автоматично генерується GitHub Actions

    # Крок 3: Збірка проекту з Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Крок 4: Публікація артефактів в GitHub Packages
    # Використовуємо GITHUB_TOKEN через змінні середовища

    - name: Publish to GitHub Packages
      run: mvn --batch-mode deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Автоматично створений токен з правами на публікацію