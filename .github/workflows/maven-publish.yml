# Workflow для публікації пакетів Maven в GitHub Packages
# GITHUB_ACTOR та GITHUB_TOKEN автоматично надаються GitHub Actions:
# - GITHUB_ACTOR: ім'я користувача, який запустив workflow
# - GITHUB_TOKEN: автоматично генерується для кожного запуску workflow
#   і має необхідні права для публікації пакетів
name: Maven Package

# Запускається при пушах в гілку main або при створенні pull request
on:
  push:
    branches: ['*']

  pull_request:
    branches: ['*']

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # Надання необхідних дозволів для публікації пакетів
    permissions:
      contents: read
      packages: write
      actions: write  # Required to trigger other workflows

    steps:
    # Крок 1: Отримання коду з репозиторію
    - uses: actions/checkout@v3

    # Крок 2: Налаштування JDK 17 з кешуванням залежностей Maven
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Крок 3: Публікація артефактів в GitHub Packages
    - name: Publish to GitHub Packages
      id: publish
      run: |
        BASE_VERSION_POM=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)

        if [ "${{ github.event_name }}" == "pull_request" ]; then
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          # Remove -SNAPSHOT from base version for the filename part
          VERSION_NO_SNAPSHOT=$(echo ${BASE_VERSION_POM} | sed 's/-SNAPSHOT//g')
          FINAL_NAME="${ARTIFACT_ID}-${VERSION_NO_SNAPSHOT}-pr-${PR_NUMBER}"
          
          echo "Pull Request build. Base POM version: ${BASE_VERSION_POM}, PR: ${PR_NUMBER}"
          echo "Setting finalName in pom.xml to: ${FINAL_NAME}"
          # Update pom.xml to set the final artifact name
          mvn versions:set-property -Dproperty=project.build.finalName -DnewVersion=${FINAL_NAME} -DgenerateBackupPoms=false
          
          echo "Packaging with updated finalName..."
          # Package the project again to create the JAR with the new finalName
          # Tests are assumed to have run in the 'Build with Maven' step, so skip them here.
          mvn -B package --file pom.xml

          echo "Deploying PR artifact. Repository path version: ${BASE_VERSION_POM}, JAR name: ${FINAL_NAME}.jar"
          # Deploy the artifact. Maven uses the version from pom.xml (BASE_VERSION_POM) for the repository path
          # and for the version in the deployed POM. The deployed POM will reference FINAL_NAME.
          mvn --batch-mode deploy --file pom.xml -DskipTests
          
          # Output versions for potential use by downstream workflows
          echo "version_to_download=${BASE_VERSION_POM}" >> $GITHUB_OUTPUT
          echo "docker_tag=${VERSION_NO_SNAPSHOT}-pr-${PR_NUMBER}" >> $GITHUB_OUTPUT
        else
          # Standard deploy for non-PR builds (e.g., main branch)
          echo "Main branch or direct push build. Version: ${BASE_VERSION_POM}"
          # The 'Build with Maven' step should have already packaged the project.
          echo "Deploying main branch artifact..."
          mvn --batch-mode deploy --file pom.xml -DskipTests

          echo "version_to_download=${BASE_VERSION_POM}" >> $GITHUB_OUTPUT
          echo "docker_tag=${BASE_VERSION_POM}" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Trigger Container Build Workflow
      if: success()  # Only run if all previous steps succeeded
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: build-and-push-container-image.yml
        token: ${{ secrets.GITHUB_TOKEN }}
        inputs: '{ "version_to_download": "${{ steps.publish.outputs.version_to_download }}", "docker_tag": "${{ steps.publish.outputs.docker_tag }}" }'
        ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }} # Use branch/tag name
